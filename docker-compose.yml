---
version: '3.1'

x-depends_on: &x-depends_on
    depends_on:
        - keeper-standalone
        - keeper1
        - keeper2
        - keeper3
        - raftkeeper-standalone
        - raftkeeper1
        - raftkeeper2
        - raftkeeper3
        - zookeeper-standalone
        - zookeeper1
        - zookeeper2
        - zookeeper3

services:
    #
    # ClickHouse
    #
    server-base:
        # Only until 23.4 there are InMemory data parts
        # https://github.com/ClickHouse/ClickHouse/pull/49429
        image: clickhouse/clickhouse-server:23.4
        volumes:
            - ./etc/clickhouse-server/config.d/overrides.yml:/etc/clickhouse-server/config.d/overrides.yml
            - ./etc/clickhouse-server/users.d/overrides.yml:/etc/clickhouse-server/users.d/overrides.yml
    server1:
        extends: server-base
        # For static replicas (since we use $HOSTNAME)
        hostname: server1
        volumes:
            - ./data/clickhouse-server1:/var/lib/clickhouse
        <<: *x-depends_on
    server2:
        extends: server-base
        # For static replicas (since we use $HOSTNAME)
        hostname: server2
        volumes:
            - ./data/clickhouse-server2:/var/lib/clickhouse
        <<: *x-depends_on

    #
    # RaftKeeper
    #
    raftkeeper-base:
        # glibc is enough
        image: ubuntu
        volumes:
            - ./etc/raftkeeper-server/config.xml:/etc/raftkeeper-server/config.xml
            - $RAFT_KEEPER_BIN:/usr/bin/raftkeeper
        command: raftkeeper server -C /etc/raftkeeper-server/config.xml
    raftkeeper-standalone:
        extends: raftkeeper-base
        volumes:
            - ./etc/raftkeeper-server/config.d/raftkeeper-standalone.xml:/etc/raftkeeper-server/config.d/raftkeeper-standalone.xml
            - ./data/raftkeeper-standalone:/var/lib/clickhouse
        environment:
            KEEPER_ID: 1
    raftkeeper1:
        extends: raftkeeper-base
        environment:
            KEEPER_ID: 1
        volumes:
            # - $BIN:/usr/bin/clickhouse
            - ./data/raftkeeper1:/var/lib/clickhouse
            - ./etc/raftkeeper-server/config.d/raftkeeper-cluster.xml:/etc/raftkeeper-server/config.d/raftkeeper-cluster.xml
    raftkeeper2:
        extends: raftkeeper-base
        environment:
            KEEPER_ID: 2
        volumes:
            - ./data/raftkeeper2:/var/lib/clickhouse
            - ./etc/raftkeeper-server/config.d/raftkeeper-cluster.xml:/etc/raftkeeper-server/config.d/raftkeeper-cluster.xml
    raftkeeper3:
        extends: raftkeeper-base
        environment:
            KEEPER_ID: 3
        volumes:
            - ./data/raftkeeper3:/var/lib/clickhouse
            - ./etc/raftkeeper-server/config.d/raftkeeper-cluster.xml:/etc/raftkeeper-server/config.d/raftkeeper-cluster.xml

    #
    # Keeper
    #
    keeper-base:
        # But we use latest clickhouse-server image for keeper
        image: clickhouse/clickhouse-server:24.6
        volumes:
            - ./etc/clickhouse-keeper/config.yml:/etc/clickhouse-keeper/config.yml
        command: clickhouse-keeper -C /etc/clickhouse-keeper/config.yml
    keeper-standalone:
        extends: keeper-base
        volumes:
            - ./etc/clickhouse-keeper/config.d/keeper-standalone.yml:/etc/clickhouse-keeper/config.d/keeper-standalone.yml
            - ./data/keeper-standalone:/var/lib/clickhouse
    keeper1:
        extends: keeper-base
        environment:
            KEEPER_ID: 1
        volumes:
            # - $BIN:/usr/bin/clickhouse
            - ./data/keeper1:/var/lib/clickhouse
            - ./etc/clickhouse-keeper/config.d/keeper-cluster.yml:/etc/clickhouse-keeper/config.d/keeper-cluster.yml
    keeper2:
        extends: keeper-base
        environment:
            KEEPER_ID: 2
        volumes:
            - ./data/keeper2:/var/lib/clickhouse
            - ./etc/clickhouse-keeper/config.d/keeper-cluster.yml:/etc/clickhouse-keeper/config.d/keeper-cluster.yml
    keeper3:
        extends: keeper-base
        environment:
            KEEPER_ID: 3
        volumes:
            - ./data/keeper3:/var/lib/clickhouse
            - ./etc/clickhouse-keeper/config.d/keeper-cluster.yml:/etc/clickhouse-keeper/config.d/keeper-cluster.yml

    #
    # ZooKeeper
    #
    zookeeper-base:
        image: ${ZOOKEEPER_IMAGE:-zookeeper:3.8}
        environment:
            ZOO_CFG_EXTRA:
                clientPort=2181
                maxSessionTimeout=60000000
                preAllocSize=131072
                snapCount=3000000
                ${ZOO_CFG_EXTRA:-}
            # Just in case, replicate settings from production, though it does not changes a lot:
            JVMFLAGS: -Xms4G -Xmx4G -XX:+AlwaysPreTouch -XX:MaxGCPauseMillis=50 -Dzookeeper.4lw.commands.whitelist=*
            ZOO_SYNC_LIMIT: 10
            ZOO_AUTOPURGE_PURGEINTERVAL: 1
            ZOO_AUTOPURGE_SNAPRETAINCOUNT: 10
            ZOO_MAX_CLIENT_CNXNS: 0
    zookeeper-standalone:
        extends: zookeeper-base
    zookeeper1:
        extends: zookeeper-base
        environment:
            ZOO_MY_ID: 1
            ZOO_SERVERS: server.1=zookeeper1:2888:3888 server.2=zookeeper2:2888:3888 server.3=zookeeper3:2888:3888
    zookeeper2:
        extends: zookeeper-base
        environment:
            ZOO_MY_ID: 2
            ZOO_SERVERS: server.1=zookeeper1:2888:3888 server.2=zookeeper2:2888:3888 server.3=zookeeper3:2888:3888
    zookeeper3:
        extends: zookeeper-base
        environment:
            ZOO_MY_ID: 3
            ZOO_SERVERS: server.1=zookeeper1:2888:3888 server.2=zookeeper2:2888:3888 server.3=zookeeper3:2888:3888


    #
    # Benchmark
    #
    benchmark:
        image: clickhouse/clickhouse-server
        volumes:
            - ./scripts:/scripts:ro
        command:
            - /bin/sh
            - -c
            - |
                start_timestamp=$(date +%s)
                echo "Started at $(date -d@$$start_timestamp)"

                # RaftKeeper
                /scripts/benchmark.sh "ClickHouse x1 + RaftKeeper 2.1.1 x1" server1 server1 raftkeeper-standalone raftkeeper_standalone
                /scripts/benchmark.sh "ClickHouse x1 + RaftKeeper 2.1.1 x3" server1 server1 raftkeeper1 raftkeeper_cluster

                /scripts/benchmark.sh "ClickHouse x2 + RaftKeeper 2.1.1 x1" server1 default raftkeeper-standalone raftkeeper_standalone
                /scripts/benchmark.sh "ClickHouse x2 + RaftKeeper 2.1.1 x3" server1 default raftkeeper1 raftkeeper_cluster

                /scripts/benchmark.sh "ClickHouse x1 + RaftKeeper 2.1.1 x1 (concurrency 32)" server1 server1 raftkeeper-standalone raftkeeper_standalone --concurrency 32
                /scripts/benchmark.sh "ClickHouse x1 + RaftKeeper 2.1.1 x3 (concurrency 32)" server1 server1 raftkeeper1 raftkeeper_cluster --concurrency 32

                /scripts/benchmark.sh "ClickHouse x2 + RaftKeeper 2.1.1 x1 (concurrency 32)" server1 default raftkeeper-standalone raftkeeper_standalone --concurrency 32
                /scripts/benchmark.sh "ClickHouse x2 + RaftKeeper 2.1.1 x3 (concurrency 32)" server1 default raftkeeper1 raftkeeper_cluster --concurrency 32

                # Keeper
                /scripts/benchmark.sh "ClickHouse x1 + Keeper 24.6 x1" server1 server1 keeper-standalone keeper_standalone
                /scripts/benchmark.sh "ClickHouse x1 + Keeper 24.6 x3" server1 server1 keeper1 keeper_cluster

                /scripts/benchmark.sh "ClickHouse x2 + Keeper 24.6 x1" server1 default keeper-standalone keeper_standalone
                /scripts/benchmark.sh "ClickHouse x2 + Keeper 24.6 x3" server1 default keeper1 keeper_cluster

                /scripts/benchmark.sh "ClickHouse x1 + Keeper 24.6 x1 (concurrency 32)" server1 server1 keeper-standalone keeper_standalone --concurrency 32
                /scripts/benchmark.sh "ClickHouse x1 + Keeper 24.6 x3 (concurrency 32)" server1 server1 keeper1 keeper_cluster --concurrency 32

                /scripts/benchmark.sh "ClickHouse x2 + Keeper 24.6 x1 (concurrency 32)" server1 default keeper-standalone keeper_standalone --concurrency 32
                /scripts/benchmark.sh "ClickHouse x2 + Keeper 24.6 x3 (concurrency 32)" server1 default keeper1 keeper_cluster --concurrency 32

                # ZooKeeper
                # run tests for ZooKeeper on server2 to have separate system.zookeeper_log
                /scripts/benchmark.sh "ClickHouse x1 + ZooKeeper 3.8 x1" server1 server1 zookeeper-standalone zookeeper_standalone
                /scripts/benchmark.sh "ClickHouse x1 + ZooKeeper 3.8 x3" server1 server1 zookeeper1 zookeeper_cluster

                /scripts/benchmark.sh "ClickHouse x2 + ZooKeeper 3.8 x1" server1 default zookeeper-standalone zookeeper_standalone
                /scripts/benchmark.sh "ClickHouse x2 + ZooKeeper 3.8 x3" server1 default zookeeper1 zookeeper_cluster

                /scripts/benchmark.sh "ClickHouse x1 + ZooKeeper 3.8 x1 (concurrency 32)" server1 server1 zookeeper-standalone zookeeper_standalone --concurrency 32
                /scripts/benchmark.sh "ClickHouse x1 + ZooKeeper 3.8 x3 (concurrency 32)" server1 server1 zookeeper1 zookeeper_cluster --concurrency 32

                /scripts/benchmark.sh "ClickHouse x2 + ZooKeeper 3.8 x1 (concurrency 32)" server1 default zookeeper-standalone zookeeper_standalone --concurrency 32
                /scripts/benchmark.sh "ClickHouse x2 + ZooKeeper 3.8 x3 (concurrency 32)" server1 default zookeeper1 zookeeper_cluster --concurrency 32

                # Results
                clickhouse-client --host "server1" -nm --format Markdown -q "
                    SYSTEM FLUSH LOGS;

                    SELECT
                        replaceOne(splitByString(', ', log_comment)[1], 'test_name=', '') AS test_name,
                        dateDiff('second', min(event_time), max(event_time)) AS duration,
                        quantileExact(0.99)(query_duration_ms) AS max_latency
                    FROM clusterAllReplicas(default, system.query_log)
                    WHERE log_comment LIKE 'test_name%' AND event_time >= fromUnixTimestamp($$start_timestamp)
                    GROUP BY 1
                    ORDER BY min(event_time) ASC
                "
        depends_on:
            - server1
            - server2
